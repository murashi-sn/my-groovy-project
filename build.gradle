buildscript {
    ext {
        sqlappjarpath = "localjarpath"
    }
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "gradle.plugin.com.sqlapp:sqlapp-gradle-plugin:0.12.25"
//        classpath files("${sqlappjarpath}/sqlapp-gradle-plugin-0.13.0-localdev.jar")
        classpath 'com.mysql:mysql-connector-j:8.4.0'
    }
}

// plugin reference
// https://docs.gradle.org/current/userguide/groovy_plugin.html

plugins {
    id 'groovy'
    id 'java'
    id 'org.springframework.boot' version '2.2.2.RELEASE'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "com.sqlapp.db"

group = 'my.example'
version = '1.0-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
}

dependencies {
    // Groovy API Reference and document
    // https://docs.groovy-lang.org/docs/groovy-3.0.22/html/gapi/
    // https://docs.groovy-lang.org/docs/groovy-3.0.22/html/documentation/
    implementation 'org.codehaus.groovy:groovy-all:3.0.22'
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // SpringBoot and MySQL
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.mysql:mysql-connector-j:8.4.0'

    // Lombock
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'

    // sqlapp
    [
            'sqlapp-core',
            'sqlapp-command',
            "sqlapp-core-mysql"
    ].each { name -> implementation "com.sqlapp:${name}:0.12.25" }
}

test {
    useJUnitPlatform()
}

//Export Schema XML
exportXml {
    debug=true
    dataSource {
		driverClassName="com.mysql.cj.jdbc.Driver"
		url="jdbc:mysql://localhost:3306/demo"
		username="root"
		password="root"
//        properties "${jdbcConfigPath}"
    }
//	target="catalog" or "schema" or "tables" or...
    target="tables"
    outputPath=file("schemas")
    outputFileName="schema.xml"
    dumpRows=true
    includeSchemas=["comment"]
//    includeRowDumpTables []
}